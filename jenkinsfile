pipeline {
  agent any

  stages {
    stage('Build') {
      steps {
        sh 'docker build -t xorapp .'
        sh 'docker tag xorapp $DOCKER_IMAGE'
      }
    }
 


     stage('Deploy') {
      steps {
        withCredentials([usernamePassword(credentialsId: "${DOCKER_CRED}", passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
          sh "echo \$DOCKER_PASSWORD | docker login -u \$DOCKER_USERNAME --password-stdin docker.io"
          sh 'docker push $DOCKER_IMAGE'
        }
      }
    }
  }
}
stage('Removing container') {
 steps {         
   echo "Removing container..."
            // Verify that the image was pulled
            sh "docker stop xorapp"
            sh "docker rm xorapp"
            echo "Removed container..."
}       
 } 
stage('Run container') {
            steps { 
           echo "Executing container..."
            // Verify that the image was pulled
            sh "docker run -d -p 9090:9090 --name xorapp $DOCKER_IMAGE"
        } 
}
stage('Verify node version') {
         steps { 
           echo "Listing node version..."
            sh "docker exec -i xorapp node --version"
        }
        }
        stage('Verify playwirght version') {
steps {         
   echo "Listing node version..."
            sh "docker exec -i xorapp playwright --version"
        }
      }  
        stage('Verify code server version') {
steps {       
     echo "Listing node version..."
            sh "docker exec -i xorapp code-server --version"
}      
  }
